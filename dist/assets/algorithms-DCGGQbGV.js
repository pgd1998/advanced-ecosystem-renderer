const t=Math.sqrt(3),n=.5*(t-1),o=(3-t)/6,r=t=>0|Math.floor(t),e=new Float64Array([1,1,-1,1,1,-1,-1,-1,1,0,-1,0,1,0,-1,0,0,1,0,-1,0,1,0,-1]);function a(t=Math.random){const a=function(t){const n=512,o=new Uint8Array(n);for(let r=0;r<n/2;r++)o[r]=r;for(let r=0;r<n/2-1;r++){const n=r+~~(t()*(256-r)),e=o[r];o[r]=o[n],o[n]=e}for(let r=256;r<n;r++)o[r]=o[r-256];return o}(t),c=new Float64Array(a).map(t=>e[t%12*2]),l=new Float64Array(a).map(t=>e[t%12*2+1]);return function(t,e){let s=0,f=0,i=0;const u=(t+e)*n,w=r(t+u),y=r(e+u),A=(w+y)*o,h=t-(w-A),m=e-(y-A);let p,F;h>m?(p=1,F=0):(p=0,F=1);const M=h-p+o,d=m-F+o,q=h-1+2*o,x=m-1+2*o,U=255&w,b=255&y;let g=.5-h*h-m*m;if(g>=0){const t=U+a[b];g*=g,s=g*g*(c[t]*h+l[t]*m)}let j=.5-M*M-d*d;if(j>=0){const t=U+p+a[b+F];j*=j,f=j*j*(c[t]*M+l[t]*d)}let k=.5-q*q-x*x;if(k>=0){const t=U+1+a[b+1];k*=k,i=k*k*(c[t]*q+l[t]*x)}return 70*(s+f+i)}}export{a as c};
//# sourceMappingURL=algorithms-DCGGQbGV.js.map
